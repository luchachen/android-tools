From c415ab3fb2bc0c1d0f6eda9a578eea8e8ab3e7f3 Mon Sep 17 00:00:00 2001
From: chunhuachen <chunhuachen@ruijie.com.cn>
Date: Mon, 3 Jun 2024 17:39:06 +0800
Subject: [PATCH] fix build on C++11

---
 liblog/logger_write.cpp | 35 +----------------------------------
 1 file changed, 1 insertion(+), 34 deletions(-)

diff --git a/liblog/logger_write.cpp b/liblog/logger_write.cpp
index 2ed4887b..7ad29a33 100644
--- a/liblog/logger_write.cpp
+++ b/liblog/logger_write.cpp
@@ -157,7 +157,7 @@ void __android_log_set_default_tag(const char* tag) {
   GetDefaultTag().assign(tag, 0, LOGGER_ENTRY_MAX_PAYLOAD);
 }
 
-static std::atomic_int32_t minimum_log_priority = ANDROID_LOG_DEFAULT;
+static std::atomic_int32_t minimum_log_priority(ANDROID_LOG_DEFAULT);
 int32_t __android_log_set_minimum_priority(int32_t priority) {
   return minimum_log_priority.exchange(priority, std::memory_order_relaxed);
 }
@@ -297,44 +297,11 @@ static const char* get_file_logger_path() {
 #endif
 }
 
-/*
- * If ro.log.file_logger.path is set to a file, send log_message to the file instead. This is for
- * Android-like environments where logd is not available; e.g. Microdroid. If the file is not
- * accessible (but ro.log.file_logger.path is set anyway), stderr is chosen as the fallback.
- *
- * Returns true if log was sent to file. false, if not.
- */
-static bool log_to_file_if_overridden(const struct __android_log_message* log_message) {
-  const char* file_logger_path = get_file_logger_path();
-  if (file_logger_path == nullptr) return false;
-
-  static FILE* stream = [&file_logger_path]() {
-    FILE* f = fopen(file_logger_path, "ae");
-    if (f != nullptr) return f;
-    using namespace std::string_literals;
-    std::string err_msg = "Cannot open "s + file_logger_path + " for logging: (" + strerror(errno) +
-                          "). Falling back to stderr";
-    __android_log_message m = {sizeof(__android_log_message),
-                               LOG_ID_DEFAULT,
-                               ANDROID_LOG_WARN,
-                               "liblog",
-                               __FILE__,
-                               __LINE__,
-                               err_msg.c_str()};
-    filestream_logger(&m, stderr);
-    return stderr;
-  }();
-  filestream_logger(log_message, stream);
-  return true;
-}
-
 void __android_log_stderr_logger(const struct __android_log_message* log_message) {
   filestream_logger(log_message, stderr);
 }
 
 void __android_log_logd_logger(const struct __android_log_message* log_message) {
-  if (log_to_file_if_overridden(log_message)) return;
-
   int buffer_id = log_message->buffer_id == LOG_ID_DEFAULT ? LOG_ID_MAIN : log_message->buffer_id;
 
   struct iovec vec[3];
-- 
2.34.1

